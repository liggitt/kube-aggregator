// +build !ignore_autogenerated_openshift

// This file was autogenerated by conversion-gen. Do not edit it manually!

package v1beta1

import (
	apifederation "github.com/openshift/kube-aggregator/pkg/apis/apifederation"
	v1 "k8s.io/kubernetes/pkg/api/v1"
	conversion "k8s.io/kubernetes/pkg/conversion"
	runtime "k8s.io/kubernetes/pkg/runtime"
	unsafe "unsafe"
)

func init() {
	SchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(scheme *runtime.Scheme) error {
	return scheme.AddGeneratedConversionFuncs(
		Convert_v1beta1_APIResource_To_apifederation_APIResource,
		Convert_apifederation_APIResource_To_v1beta1_APIResource,
		Convert_v1beta1_APIServer_To_apifederation_APIServer,
		Convert_apifederation_APIServer_To_v1beta1_APIServer,
		Convert_v1beta1_APIServerList_To_apifederation_APIServerList,
		Convert_apifederation_APIServerList_To_v1beta1_APIServerList,
		Convert_v1beta1_APIServerSpec_To_apifederation_APIServerSpec,
		Convert_apifederation_APIServerSpec_To_v1beta1_APIServerSpec,
		Convert_v1beta1_APIServerStatus_To_apifederation_APIServerStatus,
		Convert_apifederation_APIServerStatus_To_v1beta1_APIServerStatus,
		Convert_v1beta1_APISubResource_To_apifederation_APISubResource,
		Convert_apifederation_APISubResource_To_v1beta1_APISubResource,
	)
}

func autoConvert_v1beta1_APIResource_To_apifederation_APIResource(in *APIResource, out *apifederation.APIResource, s conversion.Scope) error {
	out.Name = in.Name
	out.Namespaced = in.Namespaced
	out.Kind = in.Kind
	out.SubResources = *(*[]apifederation.APISubResource)(unsafe.Pointer(&in.SubResources))
	return nil
}

func Convert_v1beta1_APIResource_To_apifederation_APIResource(in *APIResource, out *apifederation.APIResource, s conversion.Scope) error {
	return autoConvert_v1beta1_APIResource_To_apifederation_APIResource(in, out, s)
}

func autoConvert_apifederation_APIResource_To_v1beta1_APIResource(in *apifederation.APIResource, out *APIResource, s conversion.Scope) error {
	out.Name = in.Name
	out.Namespaced = in.Namespaced
	out.Kind = in.Kind
	out.SubResources = *(*[]APISubResource)(unsafe.Pointer(&in.SubResources))
	return nil
}

func Convert_apifederation_APIResource_To_v1beta1_APIResource(in *apifederation.APIResource, out *APIResource, s conversion.Scope) error {
	return autoConvert_apifederation_APIResource_To_v1beta1_APIResource(in, out, s)
}

func autoConvert_v1beta1_APIServer_To_apifederation_APIServer(in *APIServer, out *apifederation.APIServer, s conversion.Scope) error {
	if err := v1.Convert_v1_ObjectMeta_To_api_ObjectMeta(&in.ObjectMeta, &out.ObjectMeta, s); err != nil {
		return err
	}
	if err := Convert_v1beta1_APIServerSpec_To_apifederation_APIServerSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1beta1_APIServerStatus_To_apifederation_APIServerStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

func Convert_v1beta1_APIServer_To_apifederation_APIServer(in *APIServer, out *apifederation.APIServer, s conversion.Scope) error {
	return autoConvert_v1beta1_APIServer_To_apifederation_APIServer(in, out, s)
}

func autoConvert_apifederation_APIServer_To_v1beta1_APIServer(in *apifederation.APIServer, out *APIServer, s conversion.Scope) error {
	if err := v1.Convert_api_ObjectMeta_To_v1_ObjectMeta(&in.ObjectMeta, &out.ObjectMeta, s); err != nil {
		return err
	}
	if err := Convert_apifederation_APIServerSpec_To_v1beta1_APIServerSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_apifederation_APIServerStatus_To_v1beta1_APIServerStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

func Convert_apifederation_APIServer_To_v1beta1_APIServer(in *apifederation.APIServer, out *APIServer, s conversion.Scope) error {
	return autoConvert_apifederation_APIServer_To_v1beta1_APIServer(in, out, s)
}

func autoConvert_v1beta1_APIServerList_To_apifederation_APIServerList(in *APIServerList, out *apifederation.APIServerList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]apifederation.APIServer, len(*in))
		for i := range *in {
			if err := Convert_v1beta1_APIServer_To_apifederation_APIServer(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

func Convert_v1beta1_APIServerList_To_apifederation_APIServerList(in *APIServerList, out *apifederation.APIServerList, s conversion.Scope) error {
	return autoConvert_v1beta1_APIServerList_To_apifederation_APIServerList(in, out, s)
}

func autoConvert_apifederation_APIServerList_To_v1beta1_APIServerList(in *apifederation.APIServerList, out *APIServerList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]APIServer, len(*in))
		for i := range *in {
			if err := Convert_apifederation_APIServer_To_v1beta1_APIServer(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

func Convert_apifederation_APIServerList_To_v1beta1_APIServerList(in *apifederation.APIServerList, out *APIServerList, s conversion.Scope) error {
	return autoConvert_apifederation_APIServerList_To_v1beta1_APIServerList(in, out, s)
}

func autoConvert_v1beta1_APIServerSpec_To_apifederation_APIServerSpec(in *APIServerSpec, out *apifederation.APIServerSpec, s conversion.Scope) error {
	out.Group = in.Group
	out.Version = in.Version
	out.InternalHost = in.InternalHost
	out.Prefix = in.Prefix
	out.InsecureSkipTLSVerify = in.InsecureSkipTLSVerify
	out.CABundle = *(*[]byte)(unsafe.Pointer(&in.CABundle))
	out.Priority = in.Priority
	return nil
}

func Convert_v1beta1_APIServerSpec_To_apifederation_APIServerSpec(in *APIServerSpec, out *apifederation.APIServerSpec, s conversion.Scope) error {
	return autoConvert_v1beta1_APIServerSpec_To_apifederation_APIServerSpec(in, out, s)
}

func autoConvert_apifederation_APIServerSpec_To_v1beta1_APIServerSpec(in *apifederation.APIServerSpec, out *APIServerSpec, s conversion.Scope) error {
	out.InternalHost = in.InternalHost
	out.Prefix = in.Prefix
	out.Group = in.Group
	out.Version = in.Version
	out.InsecureSkipTLSVerify = in.InsecureSkipTLSVerify
	out.CABundle = *(*[]byte)(unsafe.Pointer(&in.CABundle))
	out.Priority = in.Priority
	return nil
}

func Convert_apifederation_APIServerSpec_To_v1beta1_APIServerSpec(in *apifederation.APIServerSpec, out *APIServerSpec, s conversion.Scope) error {
	return autoConvert_apifederation_APIServerSpec_To_v1beta1_APIServerSpec(in, out, s)
}

func autoConvert_v1beta1_APIServerStatus_To_apifederation_APIServerStatus(in *APIServerStatus, out *apifederation.APIServerStatus, s conversion.Scope) error {
	return nil
}

func Convert_v1beta1_APIServerStatus_To_apifederation_APIServerStatus(in *APIServerStatus, out *apifederation.APIServerStatus, s conversion.Scope) error {
	return autoConvert_v1beta1_APIServerStatus_To_apifederation_APIServerStatus(in, out, s)
}

func autoConvert_apifederation_APIServerStatus_To_v1beta1_APIServerStatus(in *apifederation.APIServerStatus, out *APIServerStatus, s conversion.Scope) error {
	return nil
}

func Convert_apifederation_APIServerStatus_To_v1beta1_APIServerStatus(in *apifederation.APIServerStatus, out *APIServerStatus, s conversion.Scope) error {
	return autoConvert_apifederation_APIServerStatus_To_v1beta1_APIServerStatus(in, out, s)
}

func autoConvert_v1beta1_APISubResource_To_apifederation_APISubResource(in *APISubResource, out *apifederation.APISubResource, s conversion.Scope) error {
	out.Name = in.Name
	out.Kind = in.Kind
	return nil
}

func Convert_v1beta1_APISubResource_To_apifederation_APISubResource(in *APISubResource, out *apifederation.APISubResource, s conversion.Scope) error {
	return autoConvert_v1beta1_APISubResource_To_apifederation_APISubResource(in, out, s)
}

func autoConvert_apifederation_APISubResource_To_v1beta1_APISubResource(in *apifederation.APISubResource, out *APISubResource, s conversion.Scope) error {
	out.Name = in.Name
	out.Kind = in.Kind
	return nil
}

func Convert_apifederation_APISubResource_To_v1beta1_APISubResource(in *apifederation.APISubResource, out *APISubResource, s conversion.Scope) error {
	return autoConvert_apifederation_APISubResource_To_v1beta1_APISubResource(in, out, s)
}
